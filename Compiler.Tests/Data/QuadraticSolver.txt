routine BabylonianSqrt(x: real): real is
    var start is 0;
    var stop is 10000;
    
    var n is 1.0;
    for i in start .. stop loop
        n := (n + (x / n)) * 0.5;
    end;
    return n;
end;

routine QuadraticSolver(a: real, b: real, c: real): real is
    var d_sqrt is BabylonianSqrt((b * b) - (4.0 * a * c));
    var num is 0.0 - b - d_sqrt;
    return num / (2.0 * a);
end;